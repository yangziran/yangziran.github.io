<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Nature</title>
    <link>https://yangziran.com/posts/</link>
    <description>Recent content in Posts on Nature</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 23 Mar 2020 21:13:19 +0800</lastBuildDate>
    
	<atom:link href="https://yangziran.com/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CentOS 7.7.1908 安装 MySQL 5.7.28-*.rpm-bundle.tar</title>
      <link>https://yangziran.com/posts/1584208079/</link>
      <pubDate>Sun, 15 Mar 2020 01:47:59 +0800</pubDate>
      
      <guid>https://yangziran.com/posts/1584208079/</guid>
      <description>1、卸载系统自带的mariadb-lib # rpm -qa|grep mariadb // mariadb-libs-5.5.64-1.el7.x86_64 # rpm -e mariadb-libs-5.5.64-1.el7.x86_64 —nodeps  2、下载mysql 5.7.28-*.rpm-bundle.tar包并解压 # tar -xvf mysql-5.7.28-1.el7.x86_64.rpm-bundle.tar  3、安装 依次执行（几个包有依赖关系，需要按顺序）下面命令安装 # rpm -ivh mysql-community-common-5.7.28-1.el7.x86_64.rpm # rpm -ivh mysql-community-libs-5.7.28-1.el7.x86_64.rpm # rpm -ivh mysql-community-client-5.7.28-1.el7.x86_64.rpm # rpm -ivh mysql-community-server-5.7.28-1.el7.x86_64.rpm  4、运行并添加开机启动 # systemctl enable mysqld // 添加开机启动 # systemctl start mysqld // 启动MySQL服务  5、登录并修改密码 在上一步启动MySQL服务的时候，会初始化MySQL并为root用户生成默认密码并将该密码标记为过期，登录后需要设置一个新的密码。 # cat /var/log/mysqld.log // 查看MySQL日志，搜索到：A temporary password is generated for root@localhost 后面就是生成的默认密码 # mysql -uroot -p // 用root用户登录MySQL mysql&amp;gt; alter user ‘root’@‘localhost’ identified by ‘新密码’; // 密码要求：长度最少8位，大小写和特殊字符组成 mysql&amp;gt; create user ‘新用户’ identified by ‘新密码’; // 创建远程登录用户 mysql&amp;gt; grant all on *.</description>
    </item>
    
    <item>
      <title>如何利用Github Pages和Hugo搭建个人博客？</title>
      <link>https://yangziran.com/posts/1584969199/</link>
      <pubDate>Mon, 23 Mar 2020 21:13:19 +0800</pubDate>
      
      <guid>https://yangziran.com/posts/1584969199/</guid>
      <description>Github Pages 和 Hugo 是什么？ Github Pages 是一个静态站点托管服务，直接将个人、组织或项目的页面托管于Github仓库中。 Hugo 是一个用Go语言编写的静态站点生成器，它针对速度、易用性和可配置性进行了优化，快速灵活。
还有其他选择吗？ Jekyll、Hexo、Middleman等，这里不做过多说明。
接下来，看看如何一步一步地位自己搭建一个博客！  注：以下步骤以在MacOS上的操作为例，其他操作系统类似，只是一些工具和命令有区别。  第1步：新建一个Github库 1、注册一个Github账号。如果你已有账号，直接登录，如果你没有账号，注册并登录。 2、打开Github Pages官网，浏览并了解User or organization site补发对应的操作步骤。 Github Pages：[https://pages.github.com](https://pages.github.com) 3、新建一个Github repository，库名为username.github.io，username即你的Github账号username。新建repository：[https://github.com/new](https://github.com/new)，作为博客内容发布仓库，权限需要为 public。 4、创建另外一个Github repository，库名随便取，这里就以blog命名，作为博客源码管理仓库，权限可以为private。  注：一个账号只能有一个username.github.io仓库，我这里已经创建了就不能再创建。  第2步：安装Hugo 第3步：新建一个Hugo网站 第4步：选择并克隆主题 第5步：编辑配置文件 第6步：新建一篇文章 第7步：本地预览网站效果 第8步：构建Hugo网站 第9步：将网站目录转换为Git库 第10步：关联远程库并推送代码 之后如何添加一篇博客 1、新建一篇文章，编辑内容 2、本地预览网站呈现效果 3、构建Hugo网站 4、提交修改至Git仓库并推送到Github 参考：  Git：https://git-scm.com/book/zh/v2 Github Pages：https://help.github.com/cn/github/working-with-github-pages Hugo：https://gohugo.io/documentation/  </description>
    </item>
    
  </channel>
</rss>